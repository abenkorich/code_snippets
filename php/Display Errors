// Put this line on top of your controller file

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

The ini_set function will try to override the configuration found in your php.ini file. 
If in the php.ini file display_error is turned off it will turn that on in the code. 
It also set display_startup_errors to true to show the error message. 
error_reporting() is a native PHP function that is used to display the errors. 
By setting it true it displays the error that occurs in the code.

What is E_ALL? The answer is simple PHP code produces different levels of errors. Including these types of errors:

E_ERROR :
fatal runtime error execution of script has been halted
E_WARNING :
nonfatal runtime error execution of script has been halted
E_PARSE :
compile time error it is generated by the parser
E_NOTICE :
The script found something that might be an error
E_CORE_ERROR :
Fatal errors that occurred during the initial startup of script
E_CORE_WARNING :
Nonfatal errors that occurred during the initial startup of script
E_ALL :
All errors and warning

Unfortunately, the above code we have composed won't almost certainly show parse errors, for example, missing semicolons or missing wavy supports. For this situation, the php.ini setup must be altered.

display_errors = on
The display_errors order must be set to "on" in the php.ini document. This will show every one of the errors including syntax or parse mistakes that can't be shown by simply calling the ini_set work in the PHP code.

So in the above way, we can display errors in our php application.
